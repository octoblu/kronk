#!/bin/bash

main(){
  local namespace="$1"
  local service_base_name="$2"
  local service_suffix="$3"
  local service_prefix="${namespace}-${service_base_name}"
  local etcd_dir="${namespace}/${service_base_name}"
  local cluster_name="$(etcdctl get /cluster/name 2>/dev/null)"
  local backend_id="${service_prefix}"
  local use_cluster_in_backend="$(etcdctl get ${etcd_dir}/use_cluster_in_backend 2>/dev/null)"
  if [ "${use_cluster_in_backend}" == "true" ]; then
    backend_id="${service_prefix}-${cluster_name}"
  fi
  local register_docker_url_key="/octoblu/register-vulcan/docker_url"
  local override_register_docker_url_key="$(etcdctl get ${etcd_dir}/register_docker_url_key 2>/dev/null)"
  if [ "${override_register_docker_url_key}" != "" ]; then
    register_docker_url_key="${override_register_docker_url_key}"
  fi
  local register_docker_name="${service_prefix}-register-${service_suffix}"
  local service_docker_name="${service_prefix}-${service_suffix}"
  local register_docker_url="$(etcdctl get "$register_docker_url_key" 2>/dev/null)"
  local port="$(cat /tmp/${service_docker_name}-port)"
  local server_id="${service_prefix}-${cluster_name}-${service_suffix}"
  local uri="http://${COREOS_PRIVATE_IPV4}:${port}"
  local vulcan_uri="$(etcdctl get /octoblu/vulcand-major/endpoint 2>/dev/null)"

  docker run --rm \
    --name "${register_docker_name}" \
    --net "host" \
    "${register_docker_url}" \
      --backend-id="${backend_id}" \
      --server-id="${server_id}" \
      --uri="${uri}" \
      --vulcan-uri="${vulcan_uri}"

  local exit_code=$?

  if [ "${exit_code}" != "0" ]; then
    echo "Exit non 0, waiting 3s before exit"
    sleep 3
  fi
  exit $exit_code
}
main $@
