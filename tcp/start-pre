#!/bin/bash

stop_docker() {
  /usr/bin/docker rm \
    --force \
    $@ &> /dev/null
}

wait_for_docker_port() {
  local docker_name="$1"
  local docker_exit_code=1

  while [ "${docker_exit_code}" != "0" ]; do
    echo "Waiting for docker port"
    docker port "${docker_name}" &> /dev/null
    docker_exit_code=$?
    sleep 1
  done
  echo "done."
}

write_env_file() {
  local tcp_env_docker_name="$1"
  local tcp_docker_name="$2"
  local etcd_key="$3"
  /usr/bin/docker run --rm \
    --name "${tcp_env_docker_name}" \
    --env ETCDCTL_PEERS=http://$(ifconfig docker0 | grep 'inet ' | awk '{print $2}'):2379 \
    quay.io/octoblu/etcd-to-env "${etcd_key}" > "/tmp/${tcp_docker_name}.env" 2> /dev/null
}

write_port_file() {
  local service_docker_name="$1"
  local port="$2"
  docker inspect "${service_docker_name}" \
    | docker run --rm --interactive realguess/jq \
      jq --raw-output ".[].NetworkSettings.Ports[\"${port}/tcp\"][].HostPort" \
    | xargs echo -n > "/tmp/${service_docker_name}-port"
  exit $?
}

main(){
  local service_prefix="$1"
  local service_suffix="$2"
  local etcd_key="$3"
  local port="$4"

  local tcp_env_docker_name="${service_prefix}-tcp-env-${service_suffix}"
  local tcp_docker_name="${service_prefix}-tcp-${service_suffix}"
  local service_docker_name="${service_prefix}-${service_suffix}"

  stop_docker "${tcp_env_docker_name}" "${tcp_docker_name}"
  wait_for_docker_port "${service_docker_name}"
  write_env_file "${tcp_env_docker_name}" "${tcp_docker_name}" "${etcd_key}"
  write_port_file "${service_docker_name}" "${port}"
}
main $@
